[
    {
        "id": "f6f2187d.f17ca8",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": ""
    },
    {
        "id": "8c27a7d4c4dffa75",
        "type": "group",
        "z": "f6f2187d.f17ca8",
        "name": "Heating Logic",
        "style": {
            "label": true
        },
        "nodes": [
            "20b30efb55d3c49d",
            "b4137dd7a956bb17",
            "c2899a1872014216",
            "a828bc838a621162",
            "3266d96998819d96",
            "8c8055f7a7dbeb20"
        ],
        "x": 394,
        "y": 879,
        "w": 612,
        "h": 302
    },
    {
        "id": "2647816c8c91ad86",
        "type": "group",
        "z": "f6f2187d.f17ca8",
        "name": "Heating Mat Relais",
        "style": {
            "label": true
        },
        "nodes": [
            "8d6a637ea7ec846e",
            "99e4d112f82c03a1",
            "c1adfc5c263203e2",
            "771f045232229bd2"
        ],
        "x": 1094,
        "y": 879,
        "w": 392,
        "h": 202
    },
    {
        "id": "cf2eb7b3e3e08c5d",
        "type": "group",
        "z": "f6f2187d.f17ca8",
        "name": "Analytics",
        "style": {
            "label": true
        },
        "nodes": [
            "f1ab3ae9afe33c02",
            "f1dbcb9992644ecc",
            "b6da9a40134f696f",
            "168ca2e3037e3b28",
            "1734a48f0da0f335",
            "df5c1ce39f1fb2c9",
            "7e70cdc8d6708c4d"
        ],
        "x": 394,
        "y": 639,
        "w": 772,
        "h": 222
    },
    {
        "id": "3cc11d24.ff01a2",
        "type": "comment",
        "z": "f6f2187d.f17ca8",
        "name": "WARNING: please check you have started this container with a volume that is mounted to /data\\n otherwise any flow changes are lost when you redeploy or upgrade the container\\n (e.g. upgrade to a more recent node-red docker image).\\n  If you are using named volumes you can ignore this warning.\\n Double click or see info side panel to learn how to start Node-RED in Docker to save your work",
        "info": "\nTo start docker with a bind mount volume (-v option), for example:\n\n```\ndocker run -it -p 1880:1880 -v /home/user/node_red_data:/data --name mynodered nodered/node-red\n```\n\nwhere `/home/user/node_red_data` is a directory on your host machine where you want to store your flows.\n\nIf you do not do this then you can experiment and redploy flows, but if you restart or upgrade the container the flows will be disconnected and lost. \n\nThey will still exist in a hidden data volume, which can be recovered using standard docker techniques, but that is much more complex than just starting with a named volume as described above.",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "444d105d6357a7d5",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "Proofuino Temperature Sensor",
        "topic": "tele/tasmota_54F9E9/SENSOR",
        "qos": "0",
        "datatype": "json",
        "broker": "3fc9282e47e7eec4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 180,
        "y": 920,
        "wires": [
            [
                "f1ab3ae9afe33c02",
                "b4137dd7a956bb17"
            ]
        ]
    },
    {
        "id": "f1dbcb9992644ecc",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "g": "cf2eb7b3e3e08c5d",
        "influxdb": "f92f1a8e841fcac0",
        "name": "Sensor Data",
        "measurement": "Sensor",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1030,
        "y": 820,
        "wires": []
    },
    {
        "id": "f1ab3ae9afe33c02",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "g": "cf2eb7b3e3e08c5d",
        "name": "format temperature",
        "func": "var data = { payload: {}};\ndata.payload.bread = msg.payload['DS18B20-1'].Temperature\ndata.payload.box = msg.payload['DS18B20-2'].Temperature\nreturn data;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 820,
        "wires": [
            [
                "f1dbcb9992644ecc"
            ]
        ]
    },
    {
        "id": "20b30efb55d3c49d",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "g": "8c27a7d4c4dffa75",
        "name": "decide power",
        "func": "const desiredBreadTemp = env.get(\"desiredDoughTemp\")\nconst maxBoxTemp = env.get(\"maxBoxTemp\")\n\nvar result = \"OFF\"\n\nconst breadTemp = msg.payload.bread\nconst boxTemp = msg.payload.box\n\nif(breadTemp < desiredBreadTemp ){\n    if(boxTemp < maxBoxTemp ){\n        result = \"ON\"\n    }\n}\nmsg.payload = result\nreturn msg",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 910,
        "y": 960,
        "wires": [
            [
                "99e4d112f82c03a1"
            ]
        ]
    },
    {
        "id": "b4137dd7a956bb17",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "g": "8c27a7d4c4dffa75",
        "name": "interface",
        "func": "return { \"payload\": { \"bread\": msg.payload.bread, \"box\": msg.payload.box}}",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 920,
        "wires": [
            [
                "20b30efb55d3c49d"
            ]
        ]
    },
    {
        "id": "8d6a637ea7ec846e",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "g": "2647816c8c91ad86",
        "name": "Smart Plug",
        "topic": "cmnd/tasmota_417AA1/power",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3fc9282e47e7eec4",
        "x": 1370,
        "y": 960,
        "wires": []
    },
    {
        "id": "c2899a1872014216",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "g": "8c27a7d4c4dffa75",
        "name": "Bread Low Box Low => Power On",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"bread\":0,\"box\":0}",
        "payloadType": "json",
        "x": 580,
        "y": 1020,
        "wires": [
            [
                "b4137dd7a956bb17"
            ]
        ]
    },
    {
        "id": "a828bc838a621162",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "g": "8c27a7d4c4dffa75",
        "name": "Bread Max Box Max => Power Off",
        "props": [
            {
                "p": "payload.bread",
                "v": "desiredDoughTemp",
                "vt": "env"
            },
            {
                "p": "payload.box",
                "v": "maxBoxTemp",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 580,
        "y": 1100,
        "wires": [
            [
                "b4137dd7a956bb17"
            ]
        ]
    },
    {
        "id": "3266d96998819d96",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "g": "8c27a7d4c4dffa75",
        "name": "Bread Low Box Max => Power Off",
        "props": [
            {
                "p": "payload.bread",
                "v": "0",
                "vt": "str"
            },
            {
                "p": "payload.box",
                "v": "maxBoxTemp",
                "vt": "env"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 580,
        "y": 1060,
        "wires": [
            [
                "b4137dd7a956bb17"
            ]
        ]
    },
    {
        "id": "99e4d112f82c03a1",
        "type": "rbe",
        "z": "f6f2187d.f17ca8",
        "g": "2647816c8c91ad86",
        "name": "onChange",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": false,
        "property": "payload",
        "topi": "topic",
        "x": 1190,
        "y": 960,
        "wires": [
            [
                "c1adfc5c263203e2"
            ]
        ]
    },
    {
        "id": "c1adfc5c263203e2",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "g": "2647816c8c91ad86",
        "name": "debug power",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 920,
        "wires": []
    },
    {
        "id": "8c8055f7a7dbeb20",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "g": "8c27a7d4c4dffa75",
        "name": "Bread Max Box Low => Power Off",
        "props": [
            {
                "p": "payload.bread",
                "v": "desiredDoughTemp",
                "vt": "env"
            },
            {
                "p": "payload.box",
                "v": "0",
                "vt": "num"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 580,
        "y": 1140,
        "wires": [
            [
                "b4137dd7a956bb17"
            ]
        ]
    },
    {
        "id": "771f045232229bd2",
        "type": "mqtt out",
        "z": "f6f2187d.f17ca8",
        "g": "2647816c8c91ad86",
        "name": "Internal Relais",
        "topic": "cmnd/tasmota_54F9E9/power",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "3fc9282e47e7eec4",
        "x": 1380,
        "y": 1040,
        "wires": []
    },
    {
        "id": "df5c1ce39f1fb2c9",
        "type": "debug",
        "z": "f6f2187d.f17ca8",
        "g": "cf2eb7b3e3e08c5d",
        "name": "debug analytics",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 740,
        "wires": []
    },
    {
        "id": "82cf63b5b8d39519",
        "type": "mqtt in",
        "z": "f6f2187d.f17ca8",
        "name": "Proofuino Relais State",
        "topic": "tele/tasmota_54F9E9/STATE",
        "qos": "0",
        "datatype": "json",
        "broker": "3fc9282e47e7eec4",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 160,
        "y": 860,
        "wires": [
            [
                "b6da9a40134f696f"
            ]
        ]
    },
    {
        "id": "b6da9a40134f696f",
        "type": "function",
        "z": "f6f2187d.f17ca8",
        "g": "cf2eb7b3e3e08c5d",
        "name": "state to power",
        "func": "var power = 0;\nif(msg.payload.POWER === \"ON\"){\n    power = 1;\n}\nreturn {\"payload\": {power}}\n",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 720,
        "y": 760,
        "wires": [
            [
                "df5c1ce39f1fb2c9",
                "7e70cdc8d6708c4d"
            ]
        ]
    },
    {
        "id": "168ca2e3037e3b28",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "g": "cf2eb7b3e3e08c5d",
        "name": "Power ON",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"ON\"",
        "payloadType": "str",
        "x": 520,
        "y": 720,
        "wires": [
            [
                "b6da9a40134f696f"
            ]
        ]
    },
    {
        "id": "1734a48f0da0f335",
        "type": "inject",
        "z": "f6f2187d.f17ca8",
        "g": "cf2eb7b3e3e08c5d",
        "name": "Power OFF",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "\"OFF\"",
        "payloadType": "str",
        "x": 510,
        "y": 680,
        "wires": [
            [
                "b6da9a40134f696f"
            ]
        ]
    },
    {
        "id": "7e70cdc8d6708c4d",
        "type": "influxdb out",
        "z": "f6f2187d.f17ca8",
        "g": "cf2eb7b3e3e08c5d",
        "influxdb": "f92f1a8e841fcac0",
        "name": "Relais Data",
        "measurement": "Relais",
        "precision": "",
        "retentionPolicy": "",
        "database": "database",
        "precisionV18FluxV20": "ms",
        "retentionPolicyV18Flux": "",
        "org": "organisation",
        "bucket": "bucket",
        "x": 1030,
        "y": 780,
        "wires": []
    },
    {
        "id": "3fc9282e47e7eec4",
        "type": "mqtt-broker",
        "name": "Broker",
        "broker": "192.168.178.46",
        "port": "1234",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "autoUnsubscribe": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closeRetain": "false",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "willMsg": {},
        "userProps": "",
        "sessionExpiry": ""
    },
    {
        "id": "f92f1a8e841fcac0",
        "type": "influxdb",
        "hostname": "192.168.178.46",
        "port": "8086",
        "protocol": "http",
        "database": "brot",
        "name": "Database",
        "usetls": false,
        "tls": "",
        "influxdbVersion": "1.x",
        "url": "http://localhost:8086",
        "rejectUnauthorized": true
    }
]
